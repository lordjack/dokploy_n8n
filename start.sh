#!/bin/bash

echo "üöÄ Iniciando Dokploy no Render.com..."

# Configurar vari√°veis de ambiente padr√£o se n√£o estiverem definidas
export DOKPLOY_PORT=${PORT:-3000}
export DOKPLOY_HOST=${DOKPLOY_HOST:-"0.0.0.0"}
export DOKPLOY_SECRET_KEY=${DOKPLOY_SECRET_KEY:-$(openssl rand -hex 32)}

echo "üìã Configura√ß√µes:"
echo "  - Porta: $DOKPLOY_PORT"
echo "  - Host: $DOKPLOY_HOST"

# Verificar se estamos rodando como root ou temos sudo
if [ "$EUID" -eq 0 ]; then
    echo "üîë Rodando como root"
    SUDO_CMD=""
else
    echo "üë§ Rodando como usu√°rio - usando sudo quando necess√°rio"
    SUDO_CMD="sudo"
fi

# Verificar se estamos em um ambiente privilegiado para Docker
echo "üîç Verificando ambiente Docker..."
DOCKER_AVAILABLE=false

# Tentar iniciar dockerd se n√£o estiver rodando
if [ ! -S /var/run/docker.sock ]; then
    echo "üê≥ Tentando iniciar Docker daemon..."
    $SUDO_CMD dockerd --host=unix:///var/run/docker.sock --iptables=false --bridge=none &
    DOCKER_PID=$!
    
    # Aguardar um pouco para o daemon iniciar
    sleep 5
    
    # Verificar se funcionou
    if docker info > /dev/null 2>&1; then
        DOCKER_AVAILABLE=true
        echo "‚úÖ Docker daemon iniciado!"
    else
        echo "‚ö†Ô∏è  Docker daemon n√£o p√¥de ser iniciado"
        # Matar processo se ainda estiver rodando
        [ ! -z "$DOCKER_PID" ] && kill $DOCKER_PID 2>/dev/null
    fi
else
    # Socket j√° existe, verificar se funciona
    if docker info > /dev/null 2>&1; then
        DOCKER_AVAILABLE=true
        echo "‚úÖ Docker j√° est√° funcionando!"
    else
        echo "‚ö†Ô∏è  Docker socket existe mas n√£o funciona"
    fi
fi

# Se Docker n√£o est√° dispon√≠vel, usar modo standalone
if [ "$DOCKER_AVAILABLE" = false ]; then
    echo "üîÑ Docker n√£o dispon√≠vel, iniciando em modo standalone..."
    exec /usr/local/bin/start-standalone.sh
fi

# Instalar Dokploy se n√£o estiver instalado
if ! command -v dokploy &> /dev/null; then
    echo "üì¶ Dokploy n√£o encontrado, instalando..."
    /usr/local/bin/install-dokploy.sh
    
    # Se a instala√ß√£o falhar, tentar modo standalone
    if ! command -v dokploy &> /dev/null; then
        echo "‚ö†Ô∏è  Instala√ß√£o padr√£o falhou, tentando modo standalone..."
        exec /usr/local/bin/start-standalone.sh
    fi
fi

# Verificar se Docker est√° funcionando
echo "üîç Testando Docker..."
DOCKER_AVAILABLE=false
if docker info > /dev/null 2>&1; then
    DOCKER_AVAILABLE=true
    echo "‚úÖ Docker est√° funcionando!"
else
    echo "‚ö†Ô∏è  Docker n√£o est√° dispon√≠vel - rodando em modo standalone"
fi

# Configurar Dokploy
echo "‚öôÔ∏è Configurando Dokploy..."

# Criar arquivo de configura√ß√£o
mkdir -p ~/.dokploy
if [ "$DOCKER_AVAILABLE" = true ]; then
    cat << EOF > ~/.dokploy/config.json
{
  "port": $DOKPLOY_PORT,
  "host": "$DOKPLOY_HOST",
  "secretKey": "$DOKPLOY_SECRET_KEY",
  "docker": {
    "host": "unix:///var/run/docker.sock"
  }
}
EOF
else
    cat << EOF > ~/.dokploy/config.json
{
  "port": $DOKPLOY_PORT,
  "host": "$DOKPLOY_HOST",
  "secretKey": "$DOKPLOY_SECRET_KEY",
  "standalone": true
}
EOF
fi

echo "üéØ Iniciando Dokploy..."

# Iniciar Dokploy com as configura√ß√µes apropriadas
if [ "$DOCKER_AVAILABLE" = true ]; then
    echo "üê≥ Iniciando com suporte Docker..."
    exec dokploy start --port $DOKPLOY_PORT --host $DOKPLOY_HOST
else
    echo "üì¶ Iniciando em modo standalone..."
    exec dokploy start --port $DOKPLOY_PORT --host $DOKPLOY_HOST --standalone
fi